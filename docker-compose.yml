version: "3.8"
services:
  api:
    build:
      context: ./
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    expose:
      - '8000'
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy


  tests:
    build:
      context: ./
      dockerfile: Dockerfile.tests
    depends_on:
      - database
      - api
      - redis

  rabbitmq:
    image: rabbitmq:alpine


  celery:
    build:
      context: ./
      dockerfile: Dockerfile.api
    command: celery -A fastapi1.celery.celery worker -l info --pool=solo
    depends_on:
      - rabbitmq
      - tests


  database:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: rest
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 30s
      retries: 3
    ports:
      - "5432:5432"
    env_file:
      - ./fastapi1/.env

  celery-beat:
    build:
      context: ./
      dockerfile: Dockerfile.api
    command: celery -A fastapi1.celery.celery beat
    depends_on:
      - rabbitmq
      - tests

  redis:
    image: redis:latest
    ports:
    - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 3
